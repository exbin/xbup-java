/*
 * Copyright (C) XBUP Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.xbup.tool.editor.module.service_manager.catalog.panel;

import java.awt.Component;
import java.awt.Frame;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.xbup.lib.core.catalog.XBACatalog;
import org.xbup.lib.core.catalog.base.XBCItem;
import org.xbup.lib.core.catalog.base.service.XBCXHDocService;
import org.xbup.tool.editor.module.service_manager.catalog.dialog.CatalogEditDocumentationDialog;

/**
 * Properties panel custom renderer.
 *
 * @version 0.1.24 2014/11/22
 * @author XBUP Project (http://xbup.org)
 */
public class CatalogPropetiesDocTableCellPanel extends javax.swing.JPanel {

    private int paramIndex;
    private XBACatalog catalog;
    private String doc;

    public CatalogPropetiesDocTableCellPanel(XBACatalog catalog) {
        this.catalog = catalog;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorButton = new javax.swing.JButton();
        docLabel = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        editorButton.setText("..."); // NOI18N
        editorButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        editorButton.setName("editorButton"); // NOI18N
        editorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorButtonActionPerformed(evt);
            }
        });
        add(editorButton, java.awt.BorderLayout.EAST);

        docLabel.setBackground(javax.swing.UIManager.getDefaults().getColor("TextField.background"));
        docLabel.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/xbup/tool/editor/module/service_manager/catalog/panel/Bundle"); // NOI18N
        docLabel.setText(bundle.getString("CatalogPropetiesDocTableCellPanel.docLabel.text")); // NOI18N
        docLabel.setName("docLabel"); // NOI18N
        add(docLabel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void editorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorButtonActionPerformed
        CatalogEditDocumentationDialog docDialog = new CatalogEditDocumentationDialog(getFrame(), true, catalog, doc);
        docDialog.setLocationRelativeTo(this);
        docDialog.setVisible(true);
        
        if (docDialog.getDialogOption() == JOptionPane.OK_OPTION) {
            doc = docDialog.getDocumentation();
            setDocLabel();
        }
    }//GEN-LAST:event_editorButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel docLabel;
    private javax.swing.JButton editorButton;
    // End of variables declaration//GEN-END:variables

    public void setCatalogItem(XBCItem catalogItem) {
        XBCXHDocService hDocService = (XBCXHDocService) catalog.getCatalogService(XBCXHDocService.class);
        doc = hDocService.getDocumentationText(catalogItem);        
        setDocLabel();
    }
    
    private void setDocLabel() {
        docLabel.setText(doc == null || doc.isEmpty() ? "" : "[" + doc.length() + " bytes]");
    }

    public String getDocument() {
        return doc;
    }
    
    public XBACatalog getCatalog() {
        return catalog;
    }

    public void setCatalog(XBACatalog catalog) {
        this.catalog = catalog;
    }

    public int getParamIndex() {
        return paramIndex;
    }

    public void setParamIndex(int paramIndex) {
        this.paramIndex = paramIndex;
    }
    
    public JComponent getCellComponent() {
        return docLabel;
    }

    private Frame getFrame() {
        Component component = SwingUtilities.getWindowAncestor(this);
        while (!(component == null || component instanceof Frame)) {
            component = component.getParent();
        }
        return (Frame) component;
    }
}
