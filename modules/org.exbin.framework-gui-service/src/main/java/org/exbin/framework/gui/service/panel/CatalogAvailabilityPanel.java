/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.gui.service.panel;

import java.awt.CardLayout;
import org.exbin.xbup.core.catalog.XBACatalog;

/**
 * Simple panel with catalog availability message.
 *
 * @version 0.2.0 2016/02/01
 * @author ExBin Project (http://exbin.org)
 */
public class CatalogAvailabilityPanel extends javax.swing.JPanel {

    public CatalogAvailabilityPanel() {
        initComponents();
        setNoCatalog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        catalogNotAvailablePanel = new javax.swing.JPanel();
        notAvailableLabel = new javax.swing.JLabel();
        catalogLoadingPanel = new javax.swing.JPanel();
        progressBarPanel = new javax.swing.JPanel();
        loadingProgressBar = new javax.swing.JProgressBar();
        loadingCatalogLabel = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        catalogNotAvailablePanel.setLayout(new java.awt.GridBagLayout());

        notAvailableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notAvailableLabel.setText("Catalog is not available");
        catalogNotAvailablePanel.add(notAvailableLabel, new java.awt.GridBagConstraints());

        add(catalogNotAvailablePanel, "notAvailable");

        catalogLoadingPanel.setLayout(new java.awt.GridBagLayout());

        loadingProgressBar.setMaximum(0);
        loadingProgressBar.setIndeterminate(true);
        loadingProgressBar.setString("Catalog is loading...");

        loadingCatalogLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadingCatalogLabel.setText("Catalog is loading...");

        javax.swing.GroupLayout progressBarPanelLayout = new javax.swing.GroupLayout(progressBarPanel);
        progressBarPanel.setLayout(progressBarPanelLayout);
        progressBarPanelLayout.setHorizontalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadingCatalogLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(progressBarPanelLayout.createSequentialGroup()
                        .addComponent(loadingProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        progressBarPanelLayout.setVerticalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadingCatalogLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadingProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        catalogLoadingPanel.add(progressBarPanel, new java.awt.GridBagConstraints());

        add(catalogLoadingPanel, "catalogLoading");

        getAccessibleContext().setAccessibleName("catalog");
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel catalogLoadingPanel;
    private javax.swing.JPanel catalogNotAvailablePanel;
    private javax.swing.JLabel loadingCatalogLabel;
    private javax.swing.JProgressBar loadingProgressBar;
    private javax.swing.JLabel notAvailableLabel;
    private javax.swing.JPanel progressBarPanel;
    // End of variables declaration//GEN-END:variables

    private void setNoCatalog() {
        ((CardLayout) getLayout()).show(this, "notAvailable");
    }

    public void setCatalog(XBACatalog catalog) {
        if (catalog == null) {
            setNoCatalog();
        } else {
            ((CardLayout) getLayout()).show(this, "catalogLoading");
        }
    }
}
