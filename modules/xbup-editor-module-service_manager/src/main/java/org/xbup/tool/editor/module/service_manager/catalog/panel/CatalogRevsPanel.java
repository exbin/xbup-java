/*
 * Copyright (C) XBUP Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.xbup.tool.editor.module.service_manager.catalog.panel;

import java.awt.Component;
import java.awt.Frame;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.xbup.lib.core.catalog.XBACatalog;
import org.xbup.lib.core.catalog.base.XBCItem;
import org.xbup.lib.core.catalog.base.XBCNode;
import org.xbup.lib.core.catalog.base.XBCSpec;
import org.xbup.lib.core.catalog.base.service.XBCSpecService;
import org.xbup.tool.editor.module.service_manager.catalog.dialog.CatalogSpecDefEditorDialog;

/**
 * XBManager Catalog Item Edit Documentation Panel.
 *
 * @version 0.1.24 2014/11/12
 * @author XBUP Project (http://xbup.org)
 */
public class CatalogRevsPanel extends javax.swing.JPanel {

    private XBACatalog catalog;
    private XBCItem catalogItem;
    private XBCSpecService specService;
    private final CatalogRevsTableModel revsModel;

    public CatalogRevsPanel() {
        revsModel = new CatalogRevsTableModel(null);
        initComponents();

        revisionsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                updateItemStatus();
            }
        });
        updateItemStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        revisionsScrollPane = new javax.swing.JScrollPane();
        revisionsTable = new javax.swing.JTable();
        revisionsControlPanel = new javax.swing.JPanel();
        addDefButton = new javax.swing.JButton();
        removeDefButton = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/xbup/tool/editor/module/service_manager/catalog/panel/resources/CatalogItemEditDefinitionPanel"); // NOI18N
        setToolTipText(bundle.getString("toolTipText")); // NOI18N
        setLayout(new java.awt.BorderLayout());

        revisionsTable.setModel(revsModel);
        revisionsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        revisionsScrollPane.setViewportView(revisionsTable);

        add(revisionsScrollPane, java.awt.BorderLayout.CENTER);

        addDefButton.setText("Add");
        addDefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDefButtonActionPerformed(evt);
            }
        });

        removeDefButton.setText("Remove");
        removeDefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDefButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout revisionsControlPanelLayout = new javax.swing.GroupLayout(revisionsControlPanel);
        revisionsControlPanel.setLayout(revisionsControlPanelLayout);
        revisionsControlPanelLayout.setHorizontalGroup(
            revisionsControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(revisionsControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addDefButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeDefButton)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        revisionsControlPanelLayout.setVerticalGroup(
            revisionsControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, revisionsControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(revisionsControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDefButton)
                    .addComponent(removeDefButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(revisionsControlPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void addDefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDefButtonActionPerformed
        CatalogSpecDefEditorDialog editorDialog = new CatalogSpecDefEditorDialog(getFrame(), true, catalog);
        editorDialog.setSpec((XBCSpec) catalogItem);
        editorDialog.setVisible(true);

    }//GEN-LAST:event_addDefButtonActionPerformed

    private void removeDefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDefButtonActionPerformed
        int selectedRow = revisionsTable.getSelectedRow();

        // removeList.add(specDef);
        // revsModel.removeItem(specDef);
        updateItemStatus();
    }//GEN-LAST:event_removeDefButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDefButton;
    private javax.swing.JButton removeDefButton;
    private javax.swing.JPanel revisionsControlPanel;
    private javax.swing.JScrollPane revisionsScrollPane;
    private javax.swing.JTable revisionsTable;
    // End of variables declaration//GEN-END:variables

    private void updateItemStatus() {
        int selectedRow = revisionsTable.getSelectedRow();
        int rowsCount = revsModel.getRowCount();
        if ((selectedRow >= 0) && (selectedRow < rowsCount)) {
            removeDefButton.setEnabled(true);
        } else {
            removeDefButton.setEnabled(false);
        }
        revisionsTable.repaint();
    }

    public void setCatalogItem(XBCItem catalogItem) {
        this.catalogItem = catalogItem;
        addDefButton.setEnabled(!(catalogItem instanceof XBCNode));
        revsModel.setSpec((XBCSpec) catalogItem);
        updateItemStatus();
    }

    public XBCItem getCatalogItem() {
        return catalogItem;
    }

    public XBACatalog getCatalog() {
        return catalog;
    }

    public void setCatalog(XBACatalog catalog) {
        this.catalog = catalog;
        specService = (XBCSpecService) catalog.getCatalogService(XBCSpecService.class);
        revsModel.setCatalog(catalog);
    }

    private Frame getFrame() {
        Component component = SwingUtilities.getWindowAncestor(this);
        while (!(component == null || component instanceof Frame)) {
            component = component.getParent();
        }
        return (Frame) component;
    }
}
