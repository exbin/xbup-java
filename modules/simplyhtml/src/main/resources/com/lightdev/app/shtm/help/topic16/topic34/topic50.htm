<html>
  <head>
    <link href="../../style.css" rel="stylesheet" type="text/css">
    
  </head>
  <body>
    <p class="heading1">
      Using layouts for proper alignment of visible components
    </p>
    <p>
      The Java language holds a powerful mechanism to properly align and size 
      GUI elements within a frame with the <font face="'Courier New',Monospaced,Monospace">
Layout</font> concept. Other than by stating absolute coordinates at design 
      time of GUI elements, layouts define a display model relative to certain 
      rules.
    </p>
    <p class="heading2">
      Examples in Class AboutBox
    </p>
    <p>
      Class <font face="'Courier New',Monospaced,Monospace"><a href="../../topic16/topic4/topic39/topic40.htm">
AboutBox</a></font> of SimplyHTML is an example of how to apply the layout 
      concept. GUI elements such as labels or images are placed onto panels. 
      For each panel exactly one layout scheme is associated by which the 
      panel controls positions and sizes of it's contents.
    </p>
    <p>
      The panel <font face="'Courier New',Monospaced,Monospace">textPane</font>
       for instance uses a <font face="'Courier New',Monospaced,Monospace">
      GridLayout</font> with one column and six rows to arrange the labels 
      contained in the panel one below the other with a gap of 5pt between 
      each other. The <font face="'Courier New',Monospaced,Monospace">
      contentPane</font> of AboutBox uses a <font face="'Courier New',Monospaced,Monospace">
BorderLayout</font> to align all other panels with a border of the 
      contentPane. <font face="'Courier New',Monospaced,Monospace">buttonPane</font>
 sticks to the bottom edge of the <font face="'Courier New',Monospaced,Monospace">
contentPane</font>, <font face="'Courier New',Monospaced,Monospace">northPane</font>
 to the top edge and so on.
    </p>
    <p class="heading2">
      Conclusion
    </p>
    <p>
      By using layouts, the GUI elements are sized automatically to fit the 
      resulting scheme. Most important, they all are resized according to the 
      rules of respective layout when the container is resized. By defining 
      layouts, the developer does not have to worry about how the components 
      need to be sized and resized. Only their positions relative to each 
      other and relative to their container need to be taken into account.
    </p>
    <p>
      So the layout model rather follows the original intention of the 
      developer rather than forcing him to transform the design intentions 
      into coding models over and over again.
    </p>
  </body>
</html>
