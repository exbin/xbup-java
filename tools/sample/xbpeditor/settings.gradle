rootProject.name = 'xbpeditor'

include ":modules:xbup-core"
include ":modules:xbup-catalog"
include ":modules:org-xbup-framework-client"
include ":modules:xbup-visual"
include ":modules:xbup-audio"
include ":modules:xbup-plugin"
include ":modules:xbup-operation"
include ":modules:xbup-parser-tree"
include ":modules:xbup-parser-command"
include ":modules:org-xbup-framework-gui"
include ":modules:org-xbup-framework-gui-api"
include ":modules:org-xbup-framework-gui-utils"
include ":modules:org-xbup-framework-gui-menu-api"
include ":modules:org-xbup-framework-gui-menu"
include ":modules:org-xbup-framework-gui-file-api"
include ":modules:org-xbup-framework-gui-file"
include ":modules:org-xbup-framework-gui-frame-api"
include ":modules:org-xbup-framework-gui-frame"
include ":modules:org-xbup-framework-gui-editor-api"
include ":modules:org-xbup-framework-gui-editor"
include ":modules:org-xbup-framework-gui-about-api"
include ":modules:org-xbup-framework-gui-about"
include ":modules:org-xbup-framework-gui-undo-api"
include ":modules:org-xbup-framework-gui-undo"
include ":modules:org-xbup-framework-gui-options-api"
include ":modules:org-xbup-framework-gui-options"
include ":modules:org-xbup-framework-editor-picture"
include ":modules:hexedit"
include ":modules:simplyhtml"

def modifyPath(project) {
    def rootProjectDir = rootProject.projectDir.parentFile.parentFile.parent
    project.children.each { p ->
        p.projectDir = new File(rootProjectDir + p.projectDir.path.substring(rootProject.projectDir.path.length(), p.projectDir.path.length()))
        modifyPath(p)
    }
}

if (rootProject.path == ':') {
    modifyPath(rootProject)
}
