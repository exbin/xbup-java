/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.gui.service.panel;

import org.exbin.xbup.client.XBCatalogServiceClient;
import org.exbin.framework.gui.service.XBDbServiceClient;

/**
 * Panel for service information.
 *
 * @version 0.2.0 2016/02/20
 * @author ExBin Project (http://exbin.org)
 */
public class ServiceInfoPanel extends javax.swing.JPanel {

    public ServiceInfoPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serviceInfoPanelLabel = new javax.swing.JLabel();
        connectionInfoBorderPanel = new javax.swing.JPanel();
        connectionInfoPanel = new javax.swing.JPanel();
        connectionHostLabel = new javax.swing.JLabel();
        connectionHostTextField = new javax.swing.JTextField();
        connectionPortLabel = new javax.swing.JLabel();
        connectionPortTextField = new javax.swing.JTextField();
        connectionProtocolLabel = new javax.swing.JLabel();
        connectionProtocolTextField = new javax.swing.JTextField();
        serviceInformationBorderPanel = new javax.swing.JPanel();
        serviceInformationPanel = new javax.swing.JPanel();
        serviceNameLabel = new javax.swing.JLabel();
        serviceNameTextField = new javax.swing.JTextField();
        serviceVersionLabel = new javax.swing.JLabel();
        serviceVersionTextField = new javax.swing.JTextField();
        serviceNetworkNameLabel = new javax.swing.JLabel();
        serviceNetworkNameTextField = new javax.swing.JTextField();
        serviceNetworkIPLabel = new javax.swing.JLabel();
        serviceNetworkIPTextField = new javax.swing.JTextField();
        managerInfoBorderPanel = new javax.swing.JPanel();
        managerInfoPanel = new javax.swing.JPanel();
        managerNameLabel = new javax.swing.JLabel();
        managerNameTextField = new javax.swing.JTextField();
        managerVersionLabel = new javax.swing.JLabel();
        managerVersionTextField = new javax.swing.JTextField();
        managerNetworkNameLabel = new javax.swing.JLabel();
        managerNetworkNameTextField = new javax.swing.JTextField();
        managerNetworkIPLabel = new javax.swing.JLabel();
        managerNetworkIPTextField = new javax.swing.JTextField();
        managerSystemLabel = new javax.swing.JLabel();
        managerSystemTextField = new javax.swing.JTextField();
        managerHardwareLabel = new javax.swing.JLabel();
        managerHardwareTextField = new javax.swing.JTextField();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/exbin/framework/gui/service/panel/resources/ServiceManagerPanel"); // NOI18N
        connectionInfoBorderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("connectionInfoBorderPanel.border.title"))); // NOI18N

        connectionInfoPanel.setLayout(new java.awt.GridLayout(3, 2, 5, 5));

        connectionHostLabel.setText(bundle.getString("hostNameLabel.text")); // NOI18N
        connectionInfoPanel.add(connectionHostLabel);

        connectionHostTextField.setEditable(false);
        connectionHostTextField.setText("unknown");
        connectionHostTextField.setBorder(null);
        connectionInfoPanel.add(connectionHostTextField);

        connectionPortLabel.setText(bundle.getString("connectionPortLabel.text")); // NOI18N
        connectionInfoPanel.add(connectionPortLabel);

        connectionPortTextField.setEditable(false);
        connectionPortTextField.setText("unknown");
        connectionPortTextField.setBorder(null);
        connectionInfoPanel.add(connectionPortTextField);

        connectionProtocolLabel.setText(bundle.getString("connectionProtocolLabel.text")); // NOI18N
        connectionInfoPanel.add(connectionProtocolLabel);

        connectionProtocolTextField.setEditable(false);
        connectionProtocolTextField.setText("unknown");
        connectionProtocolTextField.setBorder(null);
        connectionInfoPanel.add(connectionProtocolTextField);

        javax.swing.GroupLayout connectionInfoBorderPanelLayout = new javax.swing.GroupLayout(connectionInfoBorderPanel);
        connectionInfoBorderPanel.setLayout(connectionInfoBorderPanelLayout);
        connectionInfoBorderPanelLayout.setHorizontalGroup(
            connectionInfoBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionInfoBorderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectionInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        connectionInfoBorderPanelLayout.setVerticalGroup(
            connectionInfoBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connectionInfoBorderPanelLayout.createSequentialGroup()
                .addComponent(connectionInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        serviceInformationBorderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("serviceInfoBorderPanel.border.title"))); // NOI18N

        serviceInformationPanel.setLayout(new java.awt.GridLayout(4, 2, 5, 5));

        serviceNameLabel.setText(bundle.getString("serviceNameLabel.text")); // NOI18N
        serviceInformationPanel.add(serviceNameLabel);

        serviceNameTextField.setEditable(false);
        serviceNameTextField.setText("unknown");
        serviceNameTextField.setBorder(null);
        serviceInformationPanel.add(serviceNameTextField);

        serviceVersionLabel.setText(bundle.getString("serviceVersionLabel.text")); // NOI18N
        serviceInformationPanel.add(serviceVersionLabel);

        serviceVersionTextField.setEditable(false);
        serviceVersionTextField.setText("unknown");
        serviceVersionTextField.setBorder(null);
        serviceInformationPanel.add(serviceVersionTextField);

        serviceNetworkNameLabel.setText("Network Name:");
        serviceInformationPanel.add(serviceNetworkNameLabel);

        serviceNetworkNameTextField.setEditable(false);
        serviceNetworkNameTextField.setText("unknown");
        serviceNetworkNameTextField.setBorder(null);
        serviceInformationPanel.add(serviceNetworkNameTextField);

        serviceNetworkIPLabel.setText("IP Address:");
        serviceInformationPanel.add(serviceNetworkIPLabel);

        serviceNetworkIPTextField.setEditable(false);
        serviceNetworkIPTextField.setText("unknown");
        serviceNetworkIPTextField.setBorder(null);
        serviceInformationPanel.add(serviceNetworkIPTextField);

        javax.swing.GroupLayout serviceInformationBorderPanelLayout = new javax.swing.GroupLayout(serviceInformationBorderPanel);
        serviceInformationBorderPanel.setLayout(serviceInformationBorderPanelLayout);
        serviceInformationBorderPanelLayout.setHorizontalGroup(
            serviceInformationBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceInformationBorderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serviceInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        serviceInformationBorderPanelLayout.setVerticalGroup(
            serviceInformationBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serviceInformationBorderPanelLayout.createSequentialGroup()
                .addComponent(serviceInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        managerInfoBorderPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("managerInfoBorderPanel.border.title"))); // NOI18N

        managerInfoPanel.setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        managerNameLabel.setText(bundle.getString("managerNameLabel.text")); // NOI18N
        managerInfoPanel.add(managerNameLabel);

        managerNameTextField.setEditable(false);
        managerNameTextField.setText("unknown");
        managerNameTextField.setBorder(null);
        managerInfoPanel.add(managerNameTextField);

        managerVersionLabel.setText(bundle.getString("managerVersionLabel.text")); // NOI18N
        managerInfoPanel.add(managerVersionLabel);

        managerVersionTextField.setEditable(false);
        managerVersionTextField.setText("unknown");
        managerVersionTextField.setBorder(null);
        managerInfoPanel.add(managerVersionTextField);

        managerNetworkNameLabel.setText(bundle.getString("managerNetworkNameLabel.text")); // NOI18N
        managerInfoPanel.add(managerNetworkNameLabel);

        managerNetworkNameTextField.setEditable(false);
        managerNetworkNameTextField.setText("unknown");
        managerNetworkNameTextField.setBorder(null);
        managerInfoPanel.add(managerNetworkNameTextField);

        managerNetworkIPLabel.setText(bundle.getString("managerNetworkIPLabel.text")); // NOI18N
        managerInfoPanel.add(managerNetworkIPLabel);

        managerNetworkIPTextField.setEditable(false);
        managerNetworkIPTextField.setText("unknown");
        managerNetworkIPTextField.setBorder(null);
        managerInfoPanel.add(managerNetworkIPTextField);

        managerSystemLabel.setText(bundle.getString("managerSystemLabel.text")); // NOI18N
        managerInfoPanel.add(managerSystemLabel);

        managerSystemTextField.setEditable(false);
        managerSystemTextField.setText("unknown");
        managerSystemTextField.setBorder(null);
        managerInfoPanel.add(managerSystemTextField);

        managerHardwareLabel.setText(bundle.getString("managerHardwareLabel.text")); // NOI18N
        managerInfoPanel.add(managerHardwareLabel);

        managerHardwareTextField.setEditable(false);
        managerHardwareTextField.setText("unknown");
        managerHardwareTextField.setBorder(null);
        managerInfoPanel.add(managerHardwareTextField);

        javax.swing.GroupLayout managerInfoBorderPanelLayout = new javax.swing.GroupLayout(managerInfoBorderPanel);
        managerInfoBorderPanel.setLayout(managerInfoBorderPanelLayout);
        managerInfoBorderPanelLayout.setHorizontalGroup(
            managerInfoBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(managerInfoBorderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managerInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addContainerGap())
        );
        managerInfoBorderPanelLayout.setVerticalGroup(
            managerInfoBorderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managerInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serviceInfoPanelLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(serviceInformationBorderPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(connectionInfoBorderPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(managerInfoBorderPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serviceInfoPanelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(connectionInfoBorderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serviceInformationBorderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(managerInfoBorderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel connectionHostLabel;
    private javax.swing.JTextField connectionHostTextField;
    private javax.swing.JPanel connectionInfoBorderPanel;
    private javax.swing.JPanel connectionInfoPanel;
    private javax.swing.JLabel connectionPortLabel;
    private javax.swing.JTextField connectionPortTextField;
    private javax.swing.JLabel connectionProtocolLabel;
    private javax.swing.JTextField connectionProtocolTextField;
    private javax.swing.JLabel managerHardwareLabel;
    private javax.swing.JTextField managerHardwareTextField;
    private javax.swing.JPanel managerInfoBorderPanel;
    private javax.swing.JPanel managerInfoPanel;
    private javax.swing.JLabel managerNameLabel;
    private javax.swing.JTextField managerNameTextField;
    private javax.swing.JLabel managerNetworkIPLabel;
    private javax.swing.JTextField managerNetworkIPTextField;
    private javax.swing.JLabel managerNetworkNameLabel;
    private javax.swing.JTextField managerNetworkNameTextField;
    private javax.swing.JLabel managerSystemLabel;
    private javax.swing.JTextField managerSystemTextField;
    private javax.swing.JLabel managerVersionLabel;
    private javax.swing.JTextField managerVersionTextField;
    private javax.swing.JLabel serviceInfoPanelLabel;
    private javax.swing.JPanel serviceInformationBorderPanel;
    private javax.swing.JPanel serviceInformationPanel;
    private javax.swing.JLabel serviceNameLabel;
    private javax.swing.JTextField serviceNameTextField;
    private javax.swing.JLabel serviceNetworkIPLabel;
    private javax.swing.JTextField serviceNetworkIPTextField;
    private javax.swing.JLabel serviceNetworkNameLabel;
    private javax.swing.JTextField serviceNetworkNameTextField;
    private javax.swing.JLabel serviceVersionLabel;
    private javax.swing.JTextField serviceVersionTextField;
    // End of variables declaration//GEN-END:variables

    void setService(XBCatalogServiceClient service) {
        if (service == null) {
            String unknown = "unknown";
            serviceVersionTextField.setText(unknown);
            connectionHostTextField.setText(unknown);
            connectionPortTextField.setText(unknown);
            connectionProtocolTextField.setText(unknown);
            serviceNameTextField.setText(unknown);
            serviceNetworkIPTextField.setText(unknown);
            managerNameTextField.setText(unknown);
            managerNetworkIPTextField.setText(unknown);
            managerSystemTextField.setText(unknown);
            managerHardwareTextField.setText(unknown);
        } else if (service instanceof XBDbServiceClient) {
            serviceVersionTextField.setText(service.getVersion());
            connectionHostTextField.setText(service.getHost());
            connectionPortTextField.setText(Integer.toString(service.getPort()));
            connectionProtocolTextField.setText("Dummy (DB)");
            serviceNameTextField.setText("XBService");
            serviceNetworkIPTextField.setText(service.getHostAddress());
            managerNameTextField.setText("XBManager");
            managerNetworkIPTextField.setText(service.getLocalAddress());
            managerSystemTextField.setText(System.getProperty("os.name") + " (" + System.getProperty("os.version") + ")");
            managerHardwareTextField.setText(System.getProperty("os.arch"));
        } else {
            serviceVersionTextField.setText(service.getVersion());
            connectionHostTextField.setText(service.getHost());
            connectionPortTextField.setText(Integer.toString(service.getPort())); // 22594 is 0x5842 (XB)
            connectionProtocolTextField.setText("UDP (IP)");
            serviceNameTextField.setText("XBService");
            serviceNetworkIPTextField.setText(service.getHostAddress());
            managerNameTextField.setText("XBManager");
            managerNetworkIPTextField.setText(service.getLocalAddress());
            managerSystemTextField.setText(System.getProperty("os.name") + " (" + System.getProperty("os.version") + ")");
            managerHardwareTextField.setText(System.getProperty("os.arch"));
        }
    }
}
