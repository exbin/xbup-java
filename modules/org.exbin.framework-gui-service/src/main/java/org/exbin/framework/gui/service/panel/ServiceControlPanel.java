/*
 * Copyright (C) ExBin Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.exbin.framework.gui.service.panel;

/**
 * Panel for service information.
 *
 * @version 0.2.0 2016/02/20
 * @author ExBin Project (http://exbin.org)
 */
public class ServiceControlPanel extends javax.swing.JPanel {

    public ServiceControlPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serviceStatusPanel = new javax.swing.JPanel();
        restartServiceButton = new javax.swing.JButton();
        stopServiceButton = new javax.swing.JButton();
        startServiceButton = new javax.swing.JButton();
        logMessagesPanel = new javax.swing.JPanel();
        logMessagesScrollPane = new javax.swing.JScrollPane();
        logMessagesTextArea = new javax.swing.JTextArea();

        serviceStatusPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Service Status"));

        restartServiceButton.setText("Restart");
        restartServiceButton.setEnabled(false);

        stopServiceButton.setText("Stop");
        stopServiceButton.setEnabled(false);
        stopServiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopServiceButtonActionPerformed(evt);
            }
        });

        startServiceButton.setText("Start");
        startServiceButton.setEnabled(false);

        javax.swing.GroupLayout serviceStatusPanelLayout = new javax.swing.GroupLayout(serviceStatusPanel);
        serviceStatusPanel.setLayout(serviceStatusPanelLayout);
        serviceStatusPanelLayout.setHorizontalGroup(
            serviceStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceStatusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(startServiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stopServiceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restartServiceButton)
                .addContainerGap())
        );
        serviceStatusPanelLayout.setVerticalGroup(
            serviceStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serviceStatusPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(serviceStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restartServiceButton)
                    .addComponent(stopServiceButton)
                    .addComponent(startServiceButton))
                .addContainerGap())
        );

        logMessagesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Log Messages"));

        logMessagesTextArea.setEditable(false);
        logMessagesTextArea.setColumns(20);
        logMessagesTextArea.setRows(5);
        logMessagesScrollPane.setViewportView(logMessagesTextArea);

        javax.swing.GroupLayout logMessagesPanelLayout = new javax.swing.GroupLayout(logMessagesPanel);
        logMessagesPanel.setLayout(logMessagesPanelLayout);
        logMessagesPanelLayout.setHorizontalGroup(
            logMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logMessagesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logMessagesScrollPane)
                .addContainerGap())
        );
        logMessagesPanelLayout.setVerticalGroup(
            logMessagesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logMessagesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logMessagesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logMessagesPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serviceStatusPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serviceStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logMessagesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void stopServiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopServiceButtonActionPerformed
        //getService().stop();
    }//GEN-LAST:event_stopServiceButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel logMessagesPanel;
    private javax.swing.JScrollPane logMessagesScrollPane;
    private javax.swing.JTextArea logMessagesTextArea;
    private javax.swing.JButton restartServiceButton;
    private javax.swing.JPanel serviceStatusPanel;
    private javax.swing.JButton startServiceButton;
    private javax.swing.JButton stopServiceButton;
    // End of variables declaration//GEN-END:variables

    void setStopButtonEnabled(boolean b) {
        stopServiceButton.setEnabled(true);
    }
}
