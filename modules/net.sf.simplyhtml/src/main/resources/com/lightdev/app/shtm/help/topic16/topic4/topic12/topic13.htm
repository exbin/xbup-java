<html>
  <head>
    <link href="../../../style.css" rel="stylesheet" type="text/css">
    
  </head>
  <body>
    <p class="heading1">
      Constructing the main window
    </p>
    <p>
      In the constructor of class <font face="'Courier New',Monospaced,Monospace">
FrmMain</font> mainly three steps are done
    </p>
    <ul>
      <li>
        preparing the window to watch for events that would close this window
      </li>
      <li>
        adjusting the window to requirements special to application SimplyHTML
      </li>
      <li>
        adding a menu bar and menus
      </li>
    </ul>
    <p>
      Once above steps are through as described below, application 
      SimplyHTML's main window is shown. Once shown, the start process of the 
      application has ended and control is transferred to the event 
      dispatching thread which Java created for SimplyHTML automatically.
    </p>
    <p>
      The event dispatching thread controls the program flow by invoking 
      methods attached to certain events, which usually are fired by user 
      actions.
    </p>
    <p class="heading2">
      Preparing for window close events
    </p>
    <p>
      Closing an ordinary window might or might not need special handling. In 
      the simplest case, respective window just closes which would be done 
      automatically. For an application's main window however, closing usually 
      terminates the application which in turn mostly requires certain cleanup 
      before an application actually can be terminated.
    </p>
    <p>
      A window can be closed through various actions such as the user 
      selecting 'Exit' from menu 'File' or the user likes to switch off the 
      computer etc. Most of such actions are signaled to a <font face="'Courier New',Monospaced,Monospace">
JFrame</font>, if it claims to receive respective event notifications.
    </p>
    <p>
      In class <font face="'Courier New',Monospaced,Monospace">FrmMain</font>, 
      method <font face="'Courier New',Monospaced,Monospace">enableEvents</font>
 is called in the constructor of the class for this. Method <font face="'Courier New',Monospaced,Monospace">
enableEvents</font> is inherited from class <font face="'Courier New',Monospaced,Monospace">
Component</font> of package <font face="'Courier New',Monospaced,Monospace">
      java.awt</font> and is called, when a subclass of <font face="'Courier New',Monospaced,Monospace">
Component</font> likes to receive or handle events of a certain type even 
      without a respective event listener in place.
    </p>
    <p>
      Class <font face="'Courier New',Monospaced,Monospace">FrmMain</font> 
      calls for events defined in AWTEvent.WINDOW_EVENT_MASK and causes events 
      of this type being delivered to method <font face="'Courier New',Monospaced,Monospace">
processWindowEvent</font> of class <font face="'Courier New',Monospaced,Monospace">
FrmMain</font>. This method <a href="../../../topic16/topic4/topic12/topic14.htm">
handles window closing events</a> for the main window of application 
      SimplyHTML.
    </p>
    <p>
      Especially see ' <a href="../../../topic16/topic34/topic33.htm">Avoiding 
      loss of data in the close process</a>' partly dealing with this topic 
      too.
    </p>
  </body>
</html>
