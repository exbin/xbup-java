<html>
  <head>
    <link href="../../style.css" rel="stylesheet" type="text/css">
    
  </head>
  <body>
    <p class="heading1">
      Typical undo/redo parts
    </p>
    <p>
      In the Java language undo/redo support is made availabe to all text 
      components through a common set of parts, which can be used almost 
      simliarly between different applications dealing with text processing.
    </p>
    <p class="heading2">
      UndoManager
    </p>
    <p>
      An <font face="'Courier New',Monospaced,Monospace">UndoManager</font> 
      'remembers' undoable edit acionst. It is the central place to store such 
      edit actions for later use in a possible undo/redo action.
    </p>
    <p class="heading2">
      UndoableEditListener
    </p>
    <p>
      For being able to store undoable edit actions a class has to implement 
      the <font face="'Courier New',Monospaced,Monospace">UndoableEditListener</font>
 interface. By implementing this interface, an object can register itself with 
      any <font face="'Courier New',Monospaced,Monospace">Document</font> 
      whose undoable edit events it likes to handle.
    </p>
    <p>
      By listening to undoable edit events, a class acting as an <font face="'Courier New',Monospaced,Monospace">
UndoableEditListener</font> can as well update GUI elements according to the 
      undoable edit events received.
    </p>
    <p class="heading2">
      Undo and redo actions
    </p>
    <p>
      To actually undo or redo an undoable edit, actions are used as a common 
      way to make an undo or redo command available on the GUI. These actions 
      call <font face="'Courier New',Monospaced,Monospace">UndoManager</font> 
      methods to undo or redo an undoable edit. As well the actions can be 
      used to adapt the GUI according to the current undo/redo state.
    </p>
  </body>
</html>
