<html>
  <head>
    <link href="../../style.css" rel="stylesheet" type="text/css">
    <title>    </title>
    
  </head>
  <body>
    <p class="heading1">
      Creating a list format dialog
    </p>
    <p>
      Switching lists on and off as described in the <a href="../../topic16/topic120/topic123.htm">
previous chapter</a> formats lists in their default formatting as defined in 
      the style sheet of respective document (i.e. applies tags <font face="'Courier New',Monospaced,Monospace">
&lt;ul&gt;</font> and <font face="'Courier New',Monospaced,Monospace">&lt;ol&gt;</font>
 without additional attributes). To adjust list formatting, additional 
      functionality is needed.
    </p>
    <p>
      To change list formatting, a dialog is created acting on both list 
      attributes and list elements.
    </p>
    <p>
      When changing an existing ordered list from number to letter ordering 
      for instance, attributes of the list are to be changed. When switching 
      from an existing list ordered by numbers to an unordered bullet list 
      with square bullet symbol, the list element itself <i>and</i> its 
      attributes are to be changed in one step.
    </p>
    <p class="heading2">
      Re-use of existing parts
    </p>
    <p>
      List formatting functionality in part is similar to what has been 
      implemented for <a href="../../topic16/topic86.htm">table formatting</a> 
      already. Consequently, some of the existing functionality of SimplyHTML 
      can be re-used: Classes <font face="'Courier New',Monospaced,Monospace">
      DialogShell</font>, <font face="'Courier New',Monospaced,Monospace">
      AttributeComboBox</font> and <font face="'Courier New',Monospaced,Monospace">
BoundariesPanel</font> which share common classes to work with attributes and 
      attribute sets themselves. In stage 6 class <font face="'Courier New',Monospaced,Monospace">
AttributeComboBox</font> has been turned into an own class from the former 
      inner class in class <font face="'Courier New',Monospaced,Monospace">
      TableDialog</font>.
    </p>
    <p class="heading2">
      New parts to implement
    </p>
    <p>
      To create the new list format dialog, class <font face="'Courier New',Monospaced,Monospace">
ListDialog</font> is created extending class <font face="'Courier New',Monospaced,Monospace">
DialogShell</font>. Class <font face="'Courier New',Monospaced,Monospace">
      ListDialog</font> is a container for the class showing the actual list 
      attributes, new class <font face="'Courier New',Monospaced,Monospace">
      ListPanel</font>. Class <font face="'Courier New',Monospaced,Monospace">
      ListPanel</font> in turn uses classes <font face="'Courier New',Monospaced,Monospace">
AttributeComboBox</font> and <font face="'Courier New',Monospaced,Monospace">
      BoundariesPanel</font> to make available respective list attributes.
    </p>
    <p>
      How the list attributes actually are shown and changed is implemented 
      exactly the same as in class <a href="../../topic16/topic86/topic93.htm">
      TableDialog</a>.
    </p>
    <p>
      To apply list attributes as set with <font face="'Courier New',Monospaced,Monospace">
ListDialog</font>, a new method <font face="'Courier New',Monospaced,Monospace">
applyListAttributes</font> is added to class <font face="'Courier New',Monospaced,Monospace">
SHTMLEditorPane</font> which is again similar to what <a href="../../topic16/topic86/topic93.htm">
applyTableAttributes</a> does.
    </p>
  </body>
</html>
