<html>
  <head>
    <link href="../../style.css" rel="stylesheet" type="text/css">
    
  </head>
  <body>
    <p class="heading1">
      Creating a font formatting tool bar
    </p>
    <p>
      As we have created functionality to manipulate font settings as 
      described in the previous chapters, now it would be handy to have 
      certain font formatting functions availabe in a tool bar as it is done 
      in other text processors too.
    </p>
    <p>
      Creating a font formatting tool bar for that purpose is easily done 
      though a mechanism we already know from SimplyHTML's <a href="../../topic16/topic62/topic68.htm">
dynamic menu creation function</a>. Method <font face="'Courier New',Monospaced,Monospace">
createToolBar</font> uses the same technique by reading a tool bar definition 
      string and turning it into a tool bar.
    </p>
    <p class="heading2">
      Method createToolBar
    </p>
    <p>
      To create a tool bar a tool bar definition string from the resource file 
      is read having the key for each element in the tool bar delimited by 
      blanks (e.g. fontFamily fontBold fontItalic). The keys are in the order 
      as elements shall appear in the tool bar.
    </p>
    <p class="heading3">
      Standard tool bar buttons
    </p>
    <p>
      The typical case is to add a button on the tool bar for an action 
      defined in the <font face="'Courier New',Monospaced,Monospace">commands</font>
 <font face="'Courier New',Monospaced,Monospace">Hashtable</font> of class <font face="'Courier New',Monospaced,Monospace">
FrmMain</font>. Class <font face="'Courier New',Monospaced,Monospace">JToolBar</font>
 has a constructor returning a newly created button by passing an action to 
      the constructor. The constructor will do all the connections between the 
      tool bar button and the action automatically.
    </p>
    <p class="heading3">
      Combo box elements
    </p>
    <p>
      Some of the elements in the tool bar however require special handling. <font face="'Courier New',Monospaced,Monospace">
FontFamilyPicker</font> and <font face="'Courier New',Monospaced,Monospace">
      FontSizePicker</font> for instance are subclasses of <font face="'Courier New',Monospaced,Monospace">
JComboBox</font>. In their case, <font face="'Courier New',Monospaced,Monospace">
createToolbar</font> creates an instance of the component and uses method add 
      of <font face="'Courier New',Monospaced,Monospace">JToolBar</font>.
    </p>
    <p class="heading3">
      Toggle buttons
    </p>
    <p>
      <font face="'Courier New',Monospaced,Monospace">FontComponents</font> 
      other than <font face="'Courier New',Monospaced,Monospace">
      FontFamilyPicker</font> and <font face="'Courier New',Monospaced,Monospace">
FontSizePicker</font> are instances of <font face="'Courier New',Monospaced,Monospace">
ToggleFontAction</font>. For <font face="'Courier New',Monospaced,Monospace">
      ToggleFontActions</font> we need a <font face="'Courier New',Monospaced,Monospace">
JToggleButton</font> instead of a <font face="'Courier New',Monospaced,Monospace">
JButton</font> in the tool bar and we have to make sure, the <font face="'Courier New',Monospaced,Monospace">
JToggleButton</font> is property connected to its <font face="'Courier New',Monospaced,Monospace">
ToggleFontAction</font>.
    </p>
    <p>
      For each <font face="'Courier New',Monospaced,Monospace">JToggleButton</font>
 in the tool bar a <font face="'Courier New',Monospaced,Monospace">
      ToggleActionChangedListener</font> associated with the corresponding <font face="'Courier New',Monospaced,Monospace">
ToggleFontAction</font> is created. <font face="'Courier New',Monospaced,Monospace">
ToggleActionChangedListener</font> implements interface <font face="'Courier New',Monospaced,Monospace">
PropertyChangeListener</font> and will always adjust the <font face="'Courier New',Monospaced,Monospace">
JToggleButton</font> according to the action's current state. An <font face="'Courier New',Monospaced,Monospace">
ActionListener</font> in turn is registered for the <font face="'Courier New',Monospaced,Monospace">
JToggleButton</font> invoking the action when the button is pressed.
    </p>
  </body>
</html>
