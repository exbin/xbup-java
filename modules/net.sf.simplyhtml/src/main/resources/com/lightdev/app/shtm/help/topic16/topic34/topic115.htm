<html>
  <head>
    <link href="../../style.css" rel="stylesheet" type="text/css">
    
  </head>
  <body>
    <p class="heading1">
      Discrepancies in HTML and CSS rendering
    </p>
    <p>
      SimplyHTML tries to implement HTML and CSS usage as close to the 
      specified standard as possible. Still there are discrepancies for 
      rendering of the resulting documents when viewed in different 
      environments.
    </p>
    <p>
      This chapter lists known discrepancies, why they seem to occur and how 
      SimplyHTML tries to compensate the effects, if possible. Any additional <a href="../../topic1/topic7.htm">
hints and ideas to the author</a> are appreciated.
    </p>
    <p>
      Results have been tested in the following environments so far:
    </p>
    <ul>
      <li>
        Netscape 6.2.1 (SuSE Linux 8.0)
      </li>
      <li>
        Opera 6.0 B 1 (SuSE Linux 8.0)
      </li>
      <li>
        Internet Explorer 5.5 (Windows Me)
      </li>
      <li>
        Java J2SE 1.4 (SuSE Linux 8.0, Windows Me, Windows NT 3.51)
      </li>
    </ul>
    <p>
      Following is a list of known discrepancies.
    </p>
    <p class="heading2">
      Font names
    </p>
    <p>
      Fonts are locally bound to the machine SimplyHTML is running on. When 
      formatting text to display font '<font face="'Courier New',Monospaced,Monospace">
Palatino</font>' for instance it is not possible to predict if respective 
      document will display similarly in any given environment. To make it 
      easier to exchange similar font settings over different system 
      environments, some standardized font names can be used. Common font 
      names for that purpose are
    </p>
    <ul>
      <li>
        <font face="'Courier New',Monospaced,Monospace">Sans-Serif</font>
      </li>
      <li>
        <font face="'Courier New',Monospaced,Monospace">Serif</font>
      </li>
      <li>
        <font face="'Courier New',Monospaced,Monospace">Monospace</font>
      </li>
    </ul>
    <p>
      Unfortunately, the Java language has the name <font face="'Courier New',Monospaced,Monospace">
SansSerif</font> for the font that most other applications know as <font face="'Courier New',Monospaced,Monospace">
Sans<b>-</b>Serif</font>. As well Java uses name <font face="'Courier New',Monospaced,Monospace">
Monospace<b>d</b></font>, while other applications partly use <font face="'Courier New',Monospaced,Monospace">
Monospace</font>.
    </p>
    <p class="heading3">
      Solution
    </p>
    <p>
      This effect is fixed by mapping between the possible values mentioned 
      above with class <font face="'Courier New',Monospaced,Monospace">
      AttributeMapper</font>. Class <font face="'Courier New',Monospaced,Monospace">
AttributeMapper</font> is used in class <font face="'Courier New',Monospaced,Monospace">
SHTMLWriter</font> to map from Java to HTML and in class <font face="'Courier New',Monospaced,Monospace">
SHTMLDocument.SHTMLReader.SHTMLCharacterAction</font> to map from HTML to Java.
    </p>
    <p>
      In the defualt style sheet of SimplyHTML this is solved by having 
      several font family names with the one relevant for Java as the first, 
      e.g. <font face="'Courier New',Monospaced,Monospace">p { 
      font-family:SansSerif, Sans-Serif; }</font>. For some reason, however, 
      this does not work with Java on Linux, i.e. having more than one font 
      family name in the style sheet causes Java to not recognize the font 
      stlye name at all under Linux.
    </p>
    <p class="heading2">
      Font sizes
    </p>
    <p>
      Due to a bug in the <font face="'Courier New',Monospaced,Monospace">
      javax.swing</font> package, font sizes are rendered approximately 1.3 
      times smaller in <font face="'Courier New',Monospaced,Monospace">
      JEditorPane</font> than in any browser (bug id 4765271, see <font face="'Courier New',Monospaced,Monospace">
http://developer.java.sun.com/developer/bugParade/bugs/4765271.html</font>).
    </p>
    <p class="heading3">
      Solution
    </p>
    <p>
      SimplyHTML compensates this bug by providing customized views in class 
      SHTMLEditorKit.SHTMLFactory. The views adjust font sizes before they are 
      rendered so inside SimplyHTML fonts are displayed similar to as they are 
      displayed in web browsers.
    </p>
    <p>
      Unfortunately this does not fix the bug for cases where HTML is being 
      displayed through Java APIs such as JavaHelp. So a bug fix from Sun to 
      become available soon would still be highly welcome.
    </p>
    <p class="heading2">
      Table cell borders
    </p>
    <p>
      Up to J2SE 1.4 cell borders are not rendered individually and there is 
      no way to have different colors for borders of different sides of a 
      cell. Either a border is drawn around all sides of a table cell or no 
      border is drawn. There is no way for example to draw a vertical border 
      between two cells only while the other sides of these cells have no 
      borders.
    </p>
    <p class="heading3">
      Solution
    </p>
    <p>
      SimplyHTML uses customized views to establish individual border 
      rendering for table cells. Unfortunately this does not apply for cases 
      where HTML is being displayed through Java APIs such as JavaHelp. A fix 
      from Sun to become available soon would still be highly welcome.
    </p>
    <p class="heading2">
      Table cell margins
    </p>
    <p>
      The CSS specification describes CSS attribute <font face="'Courier New',Monospaced,Monospace">
margin</font> and its variations <font face="'Courier New',Monospaced,Monospace">
margin-top</font>, <font face="'Courier New',Monospaced,Monospace">
      margin-bottom</font>, etc. as a way to set the distance between two 
      block elements such as two paragraphs to each other but also for 
      elements such as a table cell. However, a setting of <font face="'Courier New',Monospaced,Monospace">
margin-left:2pt</font> for an arbitrary table cell is not being rendered up to 
      now in any of the tested browsers.
    </p>
    <p>
      Instead, only HTML attribute <font face="'Courier New',Monospaced,Monospace">
cellspacing</font> is rendered so far, which is applicable only in the <font face="'Courier New',Monospaced,Monospace">
table</font> tag (i.e. affecting all cells of respective table). Therefore 
      specification and rendering of distances between individual table cells 
      or for individual sides of a table cell is done correctly in SimplyHTML 
      but it will not be shown in a web browser as it is shown in SimplyHTML.
    </p>
    <p>
      Because SimplyHTML is built around formatting through CSS attributes, 
      the <font face="'Courier New',Monospaced,Monospace">cellspacing</font> 
      attribute can not be set for a given table in SimplyHTML. Attribute <font face="'Courier New',Monospaced,Monospace">
cellspacing</font> is rendered in SimplyHTML, when contained in an exisitng 
      HTML file.
    </p>
    <p class="heading3">
      Solution
    </p>
    <p>
      There is no solution for this effect up to now.
    </p>
  </body>
</html>
