/*
 * Copyright (C) XBUP Project
 *
 * This application or library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * This application or library is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along this application.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.xbup.tool.xbeditor.module.xbservicemanager.catalog.panel;

import java.awt.Component;
import javax.swing.JTree;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.xbup.lib.xb.catalog.XBACatalog;
import org.xbup.lib.xb.catalog.base.XBCItem;
import org.xbup.lib.xb.catalog.base.XBCNode;
import org.xbup.lib.xb.catalog.base.XBCSpec;
import org.xbup.lib.xb.catalog.base.XBCXName;
import org.xbup.lib.xb.catalog.base.service.XBCXNameService;

/**
 * XBManager Catalog Specification Selection Panel.
 *
 * @version 0.1 wr22.0 2013/05/19
 * @author XBUP Project (http://xbup.org)
 */
public class CatalogSelectSpecPanel extends javax.swing.JPanel {

    private XBCXNameService nameService;
    private CatalogSelectSpecTreeModel treeModel;

    /**
     * Creates new form CatalogSelectSpecPanel
     */
    public CatalogSelectSpecPanel(XBACatalog catalog, CatalogSpecItemType specType) {
        nameService = null;
        if (catalog!=null) {
            nameService = (XBCXNameService) catalog.getCatalogService(XBCXNameService.class);
        }
        treeModel = new CatalogSelectSpecTreeModel(catalog, specType);

        initComponents();

        specSelectTree.setCellRenderer(new DefaultTreeCellRenderer() {
            @Override
            public Component getTreeCellRendererComponent(JTree tree, Object value, boolean sel, boolean expanded, boolean leaf, int row, boolean hasFocus) {
                DefaultTreeCellRenderer retValue = (DefaultTreeCellRenderer) super.getTreeCellRendererComponent(tree, value, sel, expanded, leaf, row, hasFocus);
                if (value instanceof XBCNode) {
                    XBCNode node = (XBCNode) value;
                    if (nameService!=null) {
                        XBCXName name = nameService.getItemName(node);
                        if (name == null) {
                            retValue.setText("unknown name");
                        } else {
                            retValue.setText(name.getText());
                        }
                    } else {
                        retValue.setText("node");
                    }
                } else if (value instanceof XBCSpec) {
                    XBCSpec spec = (XBCSpec) value;
                    if (nameService!=null) {
                        XBCXName name = nameService.getItemName(spec);
                        if (name == null) {
                            retValue.setText("unknown name");
                        } else {
                            retValue.setText(name.getText());
                        }
                    } else {
                        retValue.setText("node");
                    }
                }

                return retValue;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        specSelectTree = new javax.swing.JTree();

        specSelectTree.setModel(treeModel);
        jScrollPane1.setViewportView(specSelectTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree specSelectTree;
    // End of variables declaration//GEN-END:variables

    public XBCItem getSpec() {
        return (XBCItem) specSelectTree.getLastSelectedPathComponent();
    }
}
